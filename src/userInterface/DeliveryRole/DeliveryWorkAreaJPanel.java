/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.DeliveryRole;

import Business.Enterprise.Enterprise;
import Business.Organization.DeliveryOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.TestVitalsWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import javazoom.jl.decoder.JavaLayerException;
import javazoom.jl.player.*;
import java.io.*;

/**
 *
 * @author ruchi
 */
public class DeliveryWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private DeliveryOrganization dOrganization;
    private Enterprise enterprise;
    private UserAccount userAccount;

    /**
     * Creates new form DeliveryWorkAreaJPanel
     */
    public DeliveryWorkAreaJPanel(JPanel upc, UserAccount a, DeliveryOrganization o, Enterprise e) {
        initComponents();
        this.userProcessContainer = upc;
        this.userAccount = a;
        this.enterprise = e;
        this.dOrganization = o;
        valueLabel.setText(enterprise.getName());
        valueLabel1.setText(userAccount.getEmployee().getName());
        populateTable();
        for (WorkRequest request : dOrganization.getWorkQueue().getWorkRequestList()) {
            if (request.getDeliveryBoy() == null) {
                playSound();
            }
        }
    }

    private void playSound() {
        try {

            File file = new File("C:/Users/ruchi/Documents/NetBeansProjects/latestnewCompleteProject/src/userInterface/DeliveryRole/youvegotmail.mp3");
            FileInputStream fis = new FileInputStream(file);
            BufferedInputStream bis = new BufferedInputStream(fis);
            try {
                Player player = new Player(bis);
                player.play();

            } catch (JavaLayerException ex) {

            }

        } catch (IOException e) {
        }
    }

    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();

        model.setRowCount(0);

        for (WorkRequest request : dOrganization.getWorkQueue().getWorkRequestList()) {
            Object[] row = new Object[7];
            row[0] = request;
            row[1] = request.getPatientSender().getEmployee().getName();
            row[2] = request.getPatientSender().getEmployee().getAddress();
            row[3] = request.getSalesperson().getEmployee().getName();
            row[4] = request.getDeliveryBoy() == null ? null : request.getDeliveryBoy().getEmployee().getName();
            row[5] = request.getStatus();
            Random random = new Random();
            int abc = random.nextInt(100);
            String c = "ORDER-I-120-" + abc;
            row[6] = c;
            request.setOrderId(c);
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        valueLabel1 = new javax.swing.JLabel();
        valueLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        btnProcess = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        workRequestJTable.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Message", "Patient", "Person's Address", "SalesPerson", "Drug Delivery Person", "Status", "Order Id"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(99, 231, 1127, 160));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("DRUG DELIVERY PERSON:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 142, 196, -1));

        valueLabel1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        valueLabel1.setText("<value>");
        add(valueLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(725, 140, 215, -1));

        valueLabel.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        valueLabel.setText("<value>");
        add(valueLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(725, 70, 215, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("ENTERPRISE:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 72, 110, -1));

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jButton1.setText("Assign To Me");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 450, 220, -1));

        btnProcess.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        btnProcess.setText("Process");
        btnProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcessActionPerformed(evt);
            }
        });
        add(btnProcess, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 530, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\ruchi\\Desktop\\Final Project\\Project\\src\\userInterface\\Alien Ink 2560X1600 Abstract Background.jpg")); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1920, 1290));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "please select a request to be assigned");
        }
        WorkRequest request = (WorkRequest) workRequestJTable.getValueAt(selectedRow, 0);
        if (request.getDeliveryBoy() != null) {
            JOptionPane.showMessageDialog(null, "This request has already been assigned to you");
        } else {
            request.setDeliveryBoy(userAccount);
            request.setStatus("Pending with DeliveryBoy:" + userAccount.getEmployee().getName());
            populateTable();
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcessActionPerformed
        int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a request to be processed");
        } else {
            TestVitalsWorkRequest request = (TestVitalsWorkRequest) workRequestJTable.getValueAt(selectedRow, 0);
            if (request.getStatus().equals("Left to Deliver the medicines")) {
                JOptionPane.showMessageDialog(null, "This order has been completed");
            } else if (request.getDeliveryBoy() != null && !request.getStatus().equals("Left to Deliver the medicines")) {
                request.setStatus("Processing the request to deliver the drugs" + request.getDeliveryBoy().getEmployee().getName());
                ProcessingDeliveryJPanel prDeljp = new ProcessingDeliveryJPanel(userProcessContainer, userAccount, enterprise, request);
                userProcessContainer.add("prDeljp", prDeljp);
                CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                layout.next(userProcessContainer);
            } else {
                JOptionPane.showMessageDialog(null, "Please assign the request first");
            }

        }
    }//GEN-LAST:event_btnProcessActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnProcess;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel valueLabel;
    private javax.swing.JLabel valueLabel1;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
