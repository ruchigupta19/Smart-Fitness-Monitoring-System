/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.ReceptionistRole;

import Business.Enterprise.Enterprise;
import Business.Organization.DoctorOrganization;
import Business.Organization.InternOrganization;
import Business.Organization.Organization;
import Business.Organization.ReceptionistOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import javazoom.jl.decoder.JavaLayerException;
import javazoom.jl.player.Player;

/**
 *
 * @author ruchi
 */
public class ProcessRequestsReceptionist extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private ReceptionistOrganization rOrganization;
    private Enterprise enterprise;
    private UserAccount userAccount;

    /**
     * Creates new form ProcessRequestsReceptionist
     */
    public ProcessRequestsReceptionist(JPanel upc, UserAccount ua, ReceptionistOrganization o, Enterprise e) {
        initComponents();
        this.userProcessContainer = upc;
        this.rOrganization = o;
        this.enterprise = e;
        this.userAccount = ua;
        valueLabel1.setText(userAccount.getEmployee().getName());
        valueLabel.setText(enterprise.getName());
        populateTable();
        for (WorkRequest request : rOrganization.getWorkQueue().getWorkRequestList()) {
            if (request.getReceptionistSender() == null) {
                playSound();
            }
        }
    }

    private void playSound() {
        try {

            File file = new File("C:/Users/ruchi/Documents/NetBeansProjects/latestnewCompleteProject/src/userInterface/DeliveryRole/youvegotmail.mp3");
            FileInputStream fis = new FileInputStream(file);
            BufferedInputStream bis = new BufferedInputStream(fis);
            try {
                Player player = new Player(bis);
                player.play();

            } catch (JavaLayerException ex) {

            }

        } catch (IOException e) {
        }
    }

    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();

        model.setRowCount(0);

        for (WorkRequest request : rOrganization.getWorkQueue().getWorkRequestList()) {
            Object[] row = new Object[7];
            row[0] = request;
            row[1] = request.getPatientSender().getEmployee().getName();
            row[2] = request.getReceptionistSender();
            row[3] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
            row[4] = request.getStatus();
            row[5] = request.getVitalSigns();
            row[6] = request.getVitalSigns().getStatus();

            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        assignJButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        sendToInternbtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        sendToDocBtn = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        valueLabel1 = new javax.swing.JLabel();
        valueLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setFont(new java.awt.Font("Tahoma", 2, 16)); // NOI18N
        jLabel6.setText("Assigns receptionist to the request");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 600, -1, -1));

        assignJButton.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        assignJButton.setText("Assign to me");
        assignJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignJButtonActionPerformed(evt);
            }
        });
        add(assignJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 550, 296, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 2, 16)); // NOI18N
        jLabel5.setText("Moderate/Normal Requests to be send to interns ");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 680, -1, -1));

        sendToInternbtn.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        sendToInternbtn.setText("Send it to Intern");
        sendToInternbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendToInternbtnActionPerformed(evt);
            }
        });
        add(sendToInternbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 640, 297, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 2, 16)); // NOI18N
        jLabel4.setText("High Risk Requests to be send to Doctors ");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 780, -1, -1));

        sendToDocBtn.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        sendToDocBtn.setText("Send it to Doctor");
        sendToDocBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendToDocBtnActionPerformed(evt);
            }
        });
        add(sendToDocBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 730, 297, -1));

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jButton1.setText("Refresh Requests");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 470, 297, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 2, 16)); // NOI18N
        jLabel1.setText("Click here to refresh the table");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 510, 250, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setText("ACTIONS TO BE PERFORMED ON THE REQUESTS");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 400, -1, -1));

        workRequestJTable.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Message", "Sender", "Receptionist Processing the request", "Receiver", "Status", "Date on which Vital Sign was recorded", "Body Parameters Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 250, 1450, 97));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setText("REQUESTS TABLE");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 190, -1, -1));

        valueLabel1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        valueLabel1.setText("<value>");
        add(valueLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 120, 832, -1));

        valueLabel.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        valueLabel.setText("<value>");
        add(valueLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 60, 832, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel2.setText("ENTERPRISE:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 60, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel3.setText("RECEPTIONIST:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 120, -1, -1));

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jButton2.setText("<<BACK");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 960, -1, -1));

        jLabel9.setIcon(new javax.swing.ImageIcon("C:\\Users\\ruchi\\Desktop\\Final Project\\Project\\src\\userInterface\\Alien Ink 2560X1600 Abstract Background.jpg")); // NOI18N
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1790, 1490));
    }// </editor-fold>//GEN-END:initComponents

    private void assignJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignJButtonActionPerformed

        int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "please select a request to be assigned");
        }
        WorkRequest request = (WorkRequest) workRequestJTable.getValueAt(selectedRow, 0);

        if (request.getReceptionistSender() != null) {
            JOptionPane.showMessageDialog(null, "This request has already been assigned to you");
        } else {
            request.setReceptionistSender(userAccount);
            request.setStatus("Pending with receptionist");
            populateTable();
        }

    }//GEN-LAST:event_assignJButtonActionPerformed

    private void sendToInternbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendToInternbtnActionPerformed
        int selectedRow = workRequestJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "please select a request to be send to intern");
        }
        else
        {
        WorkRequest request = (WorkRequest) workRequestJTable.getValueAt(selectedRow, 0);
        if (request.getReceptionistSender() != null) {
            if ((request.getStatus().equals("Request is sent to doctor"))) {
                JOptionPane.showMessageDialog(null, "This request has already been assigned to a doctor");
            } else if ((request.getStatus().equals("Request is sent to intern"))) {
                JOptionPane.showMessageDialog(null, "This request has already been assigned to an intern");
            } 
            else {
                              
                          if(request.getVitalSigns().getStatus().equals("HIGHRISK"))
                                {
                                  JOptionPane.showMessageDialog(null, "The patient is at high risk.Please assign this request to a doctor for further analysis");
                                }
                          else
                                {
                                  request.setReceptionistSender(userAccount); 
                                  Organization org = null;
                                  for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) 
                                     {
                                        if (organization instanceof InternOrganization) 
                                        {
                                        org = organization;
                                        break;
                                        }
                                     }
                                  if (org != null)
                                  {
                                  org.getWorkQueue().getWorkRequestList().add(request);
                                  userAccount.getWorkQueue().getWorkRequestList().add(request);
                                  }       
                                  request.setStatus("Request is sent to intern");
                                  JOptionPane.showMessageDialog(null, "Request has been sent to intern to review");
                              }
                           
                   }

        } else {
            JOptionPane.showMessageDialog(null, "Please assign the request first");
        }
        }
     

    }//GEN-LAST:event_sendToInternbtnActionPerformed

    private void sendToDocBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendToDocBtnActionPerformed
        int selectedRow = workRequestJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "please select a request to be send to doctor");
        }
        WorkRequest request = (WorkRequest) workRequestJTable.getValueAt(selectedRow, 0);
        if (request.getReceptionistSender() != null) {
            if ((request.getStatus().equals("Request is sent to doctor"))) {
                JOptionPane.showMessageDialog(null, "This request has already been assigned to a doctor");
            } else if ((request.getStatus().equals("Request is sent to intern"))) {
                JOptionPane.showMessageDialog(null, "This request has already been assigned to an intern");
            } else {
                request.setReceptionistSender(userAccount);
                Organization org = null;
                for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                    if (organization instanceof DoctorOrganization) {
                        org = organization;
                        break;
                    }
                }
                if (org != null) {
                    org.getWorkQueue().getWorkRequestList().add(request);
                    userAccount.getWorkQueue().getWorkRequestList().add(request);
                }
                request.setStatus("Request is sent to doctor");
                JOptionPane.showMessageDialog(null, "Request has been sent to doctor to review");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please assign the request first");
        }

    }//GEN-LAST:event_sendToDocBtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        populateTable();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton2ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignJButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton sendToDocBtn;
    private javax.swing.JButton sendToInternbtn;
    private javax.swing.JLabel valueLabel;
    private javax.swing.JLabel valueLabel1;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
