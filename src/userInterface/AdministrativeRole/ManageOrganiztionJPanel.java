/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.AdministrativeRole;

import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.Organization.Organization.Type;
//import Business.Organization.Organization.Type2;
import Business.Organization.OrganizationDirectory;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ruchi
 */
public class ManageOrganiztionJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private OrganizationDirectory organizationDirectory;

    /**
     * Creates new form ManageOrganiztionJPanel
     */
    public ManageOrganiztionJPanel(JPanel upc, Enterprise e) {
        initComponents();
        this.userProcessContainer = upc;
        this.enterprise = e;
        this.organizationDirectory = e.getOrganizationDirectory();
        valueLabel1.setText(enterprise.getName());
        /**
         * if(enterprise.getEnterpriseType().equals("Hospital")) {
         * this.hospitalOrganizationDirectory=e.getOrganizationDirectory(); }
         */

        populateTable();
        populateCombo();
    }

    private void populateCombo() {
        organizationJComboBox.removeAllItems();
        if (enterprise.getEnterpriseType().getValue().equals("Hospital Enterprise")) {
            for (Organization.Type type : Organization.Type.values()) {
                if ((!type.getValue().equals(Organization.Type.Admin.getValue())) && (!type.getValue().equals(Organization.Type.SalesPerson.getValue()))
                        && (!type.getValue().equals(Organization.Type.Delivery.getValue()))) {
                    organizationJComboBox.addItem(type);
                }
            }
        } else if (enterprise.getEnterpriseType().getValue().equals("Pharmacy Enterprise")) {
            for (Organization.Type type : Organization.Type.values()) {
                if ((!type.getValue().equals(Organization.Type.Admin.getValue())) && (!type.getValue().equals(Organization.Type.Doctor.getValue()))
                        && (!type.getValue().equals(Organization.Type.Intern.getValue())) && (!type.getValue().equals(Organization.Type.Patient.getValue()))
                        && (!type.getValue().equals(Organization.Type.Receptionist.getValue())) && (!type.getValue().equals(Organization.Type.Delivery.getValue()))) {
                    organizationJComboBox.addItem(type);
                }
            }
        } else if (enterprise.getEnterpriseType().getValue().equals("Drug Delivery Enterprise")) {
            for (Organization.Type type : Organization.Type.values()) {
                if ((!type.getValue().equals(Organization.Type.Admin.getValue())) && (!type.getValue().equals(Organization.Type.Doctor.getValue()))
                        && (!type.getValue().equals(Organization.Type.Intern.getValue())) && (!type.getValue().equals(Organization.Type.Patient.getValue()))
                        && (!type.getValue().equals(Organization.Type.Receptionist.getValue())) && (!type.getValue().equals(Organization.Type.SalesPerson.getValue()))) {
                    organizationJComboBox.addItem(type);
                }
            }
        }

    }

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) organizationJTable.getModel();
        int rowCount = organizationJTable.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            model.removeRow(i);
        }
        model.setRowCount(0);
        for (Organization organization : organizationDirectory.getOrganizationList()) {
            Object[] row = new Object[2];
            row[0] = organization;
            row[1] = organization.getOrganizationID();

            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        valueLabel1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        addJButton = new javax.swing.JButton();
        organizationJComboBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        organizationJTable = new javax.swing.JTable();
        btnRemove = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jButton1.setText("<< BACK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 900, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel4.setText("MANAGING ORGANIZATIONS");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 60, 380, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel8.setText("ENTERPRISE:");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 200, -1, -1));

        valueLabel1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        valueLabel1.setText("<value>");
        add(valueLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 200, 300, 20));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setText("ENTERPRISE DETAILS");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 140, -1, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setText("ADDING ORGANIZATIONS TO ENTERPRISE");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 260, -1, -1));

        addJButton.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        addJButton.setText("Add Organization");
        addJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addJButtonActionPerformed(evt);
            }
        });
        add(addJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(482, 393, -1, -1));

        organizationJComboBox.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        organizationJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(organizationJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 320, 220, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel1.setText("Organization Type:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 330, -1, -1));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel11.setText("ORGANIZATION DETAILS");
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 460, -1, -1));

        organizationJTable.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        organizationJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Id"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(organizationJTable);
        if (organizationJTable.getColumnModel().getColumnCount() > 0) {
            organizationJTable.getColumnModel().getColumn(0).setResizable(false);
            organizationJTable.getColumnModel().getColumn(1).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 530, 644, 180));

        btnRemove.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        btnRemove.setText("Remove");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });
        add(btnRemove, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 750, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userInterface/Alien Ink 2560X1600 Abstract Background.jpg"))); // NOI18N
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1740, 1260));
    }// </editor-fold>//GEN-END:initComponents

    private void addJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addJButtonActionPerformed
        int flag = 0;
        Type type = (Type) organizationJComboBox.getSelectedItem();
        for (Organization o : organizationDirectory.getOrganizationList()) {
            if (type.getValue().equals(o.getName())) {
                flag = 1;
                break;
            }
        }
        if (flag == 0) {
            organizationDirectory.createOrganization(type);
            populateTable();
        } else {
            JOptionPane.showMessageDialog(null, "This Organization has already been added");
        }

    }//GEN-LAST:event_addJButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        int row = organizationJTable.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            Organization o = (Organization) organizationJTable.getValueAt(row, 0);
            enterprise.getOrganizationDirectory().removeOrganization(o);
            populateTable();
        }

    }//GEN-LAST:event_btnRemoveActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addJButton;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox organizationJComboBox;
    private javax.swing.JTable organizationJTable;
    private javax.swing.JLabel valueLabel1;
    // End of variables declaration//GEN-END:variables
}
