/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.InternRole;

import Business.Enterprise.Enterprise;
import Business.Organization.InternOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.TestVitalsWorkRequest;
import Business.WorkQueue.WorkRequest;
import business.VitalSigns.VitalSigns;
import java.awt.CardLayout;
import java.awt.Color;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import javazoom.jl.decoder.JavaLayerException;
import javazoom.jl.player.Player;

/**
 *
 * @author ruchi
 */
public class InternWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private InternOrganization iOrganization;
    private Enterprise enterprise;
    private UserAccount userAccount;

    /**
     * Creates new form InternWorkAreaJPanel
     */
    public InternWorkAreaJPanel(JPanel upc, UserAccount a, InternOrganization o, Enterprise e) {
        initComponents();
        this.userProcessContainer = upc;
        this.userAccount = a;
        this.enterprise = e;
        this.iOrganization = o;
        valueLabel.setText(enterprise.getName());
        valueLabel1.setText(userAccount.getEmployee().getName());
        populateTable();
        for (WorkRequest request : iOrganization.getWorkQueue().getWorkRequestList()) {
            if (request.getReceiver() == null) {
                playSound();
            }
        }
        txtWt2.setVisible(false);
        txtSysBp2.setVisible(false);
        txtHr2.setVisible(false);
        txtDysBp2.setVisible(false);
        txtBmi2.setVisible(false);
        txtHeight2.setVisible(false);
        txtBloodPh2.setVisible(false);
        txtBloodHb2.setVisible(false);
        txtTemp2.setVisible(false);
        txtRespRate2.setVisible(false);
        txtBloodSugar2.setVisible(false);
        txtPulseR2.setVisible(false);
        txtCho2.setVisible(false);
    }

    private void playSound() {
        try {

            File file = new File("C:/Users/ruchi/Documents/NetBeansProjects/latestnewCompleteProject/src/userInterface/DeliveryRole/youvegotmail.mp3");
            FileInputStream fis = new FileInputStream(file);
            BufferedInputStream bis = new BufferedInputStream(fis);
            try {
                Player player = new Player(bis);
                player.play();

            } catch (JavaLayerException ex) {

            }

        } catch (IOException e) {
        }
    }

    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();

        model.setRowCount(0);

        for (WorkRequest request : iOrganization.getWorkQueue().getWorkRequestList()) {
            Object[] row = new Object[7];
            row[0] = request;
            row[1] = request.getPatientSender().getEmployee().getName();
            row[2] = request.getReceptionistSender().getEmployee().getName();
            row[3] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
            row[4] = request.getStatus();
            row[5] = request.getVitalSigns();
            row[6] = request.getVitalSigns().getStatus();

            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtHr2 = new javax.swing.JTextField();
        txtTemp1 = new javax.swing.JTextField();
        txtBloodPh1 = new javax.swing.JTextField();
        txtBloodHb1 = new javax.swing.JTextField();
        txtHeight1 = new javax.swing.JTextField();
        txtBmi1 = new javax.swing.JTextField();
        txtHr1 = new javax.swing.JTextField();
        txtAge1 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        txtBmi2 = new javax.swing.JTextField();
        txtHeight2 = new javax.swing.JTextField();
        txtBloodPh2 = new javax.swing.JTextField();
        txtBloodHb2 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtTemp2 = new javax.swing.JTextField();
        txtRespRate2 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtRespRate1 = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        txtBloodSugar2 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtBloodSugar1 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtPulseR1 = new javax.swing.JTextField();
        txtCho1 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtCho2 = new javax.swing.JTextField();
        txtPulseR2 = new javax.swing.JTextField();
        txtDysBp2 = new javax.swing.JTextField();
        txtSysBp2 = new javax.swing.JTextField();
        txtWt2 = new javax.swing.JTextField();
        txtWt1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtDysBp1 = new javax.swing.JTextField();
        txtSysBp1 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        jLabel31 = new javax.swing.JLabel();
        btnAssignToMe = new javax.swing.JButton();
        btnViewDetails = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        valueLabel1 = new javax.swing.JLabel();
        valueLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtHr2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        add(txtHr2, new org.netbeans.lib.awtextra.AbsoluteConstraints(799, 854, 89, -1));

        txtTemp1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        add(txtTemp1, new org.netbeans.lib.awtextra.AbsoluteConstraints(595, 649, 87, -1));

        txtBloodPh1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        add(txtBloodPh1, new org.netbeans.lib.awtextra.AbsoluteConstraints(593, 731, 89, -1));

        txtBloodHb1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        add(txtBloodHb1, new org.netbeans.lib.awtextra.AbsoluteConstraints(593, 690, 89, -1));

        txtHeight1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        add(txtHeight1, new org.netbeans.lib.awtextra.AbsoluteConstraints(593, 772, 89, -1));

        txtBmi1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        add(txtBmi1, new org.netbeans.lib.awtextra.AbsoluteConstraints(593, 813, 89, -1));

        txtHr1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        add(txtHr1, new org.netbeans.lib.awtextra.AbsoluteConstraints(593, 854, 89, -1));

        txtAge1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtAge1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAge1ActionPerformed(evt);
            }
        });
        add(txtAge1, new org.netbeans.lib.awtextra.AbsoluteConstraints(593, 895, 89, -1));

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel16.setText("years");
        add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(687, 898, -1, -1));

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel15.setText("bpm");
        add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(687, 857, -1, -1));

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jButton1.setText("Process");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(659, 947, -1, -1));

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel14.setText("cms");
        add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(687, 775, -1, -1));

        txtBmi2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        add(txtBmi2, new org.netbeans.lib.awtextra.AbsoluteConstraints(799, 813, 89, -1));

        txtHeight2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        add(txtHeight2, new org.netbeans.lib.awtextra.AbsoluteConstraints(799, 772, 89, -1));

        txtBloodPh2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        add(txtBloodPh2, new org.netbeans.lib.awtextra.AbsoluteConstraints(799, 731, 89, -1));

        txtBloodHb2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        add(txtBloodHb2, new org.netbeans.lib.awtextra.AbsoluteConstraints(801, 690, 87, -1));

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel12.setText("ph units");
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(687, 734, -1, -1));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel11.setText("g/dl");
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(687, 693, -1, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel10.setText("Fahrenhite");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(687, 652, -1, -1));

        txtTemp2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        add(txtTemp2, new org.netbeans.lib.awtextra.AbsoluteConstraints(801, 649, 87, -1));

        txtRespRate2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtRespRate2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRespRate2ActionPerformed(evt);
            }
        });
        add(txtRespRate2, new org.netbeans.lib.awtextra.AbsoluteConstraints(801, 608, 87, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel9.setText("breath/min");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(687, 611, -1, -1));

        txtRespRate1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtRespRate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRespRate1ActionPerformed(evt);
            }
        });
        add(txtRespRate1, new org.netbeans.lib.awtextra.AbsoluteConstraints(595, 608, 87, -1));

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel22.setText("RESPIRATION RATE:");
        add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(377, 611, -1, -1));

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel23.setText("BODY TEMPERATURE:");
        add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(377, 652, -1, -1));

        jLabel24.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel24.setText("BLOOD HAEMOGLOBIN:");
        add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(377, 693, -1, -1));

        jLabel25.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel25.setText("BLOOD PH:");
        add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(377, 734, -1, -1));

        jLabel26.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel26.setText("HEIGHT:");
        add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(377, 775, -1, -1));

        jLabel27.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel27.setText("BMI:");
        add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(377, 816, -1, -1));

        jLabel28.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel28.setText("HEART RATE:");
        add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(377, 857, -1, -1));

        jLabel29.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel29.setText("AGE:");
        add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(377, 898, -1, -1));

        txtBloodSugar2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        add(txtBloodSugar2, new org.netbeans.lib.awtextra.AbsoluteConstraints(801, 567, 87, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel8.setText("mg/dl");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(687, 570, -1, -1));

        txtBloodSugar1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        add(txtBloodSugar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(595, 567, 87, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel7.setText("beats/min");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(687, 529, -1, -1));

        txtPulseR1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtPulseR1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPulseR1ActionPerformed(evt);
            }
        });
        add(txtPulseR1, new org.netbeans.lib.awtextra.AbsoluteConstraints(595, 526, 87, -1));

        txtCho1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        add(txtCho1, new org.netbeans.lib.awtextra.AbsoluteConstraints(595, 485, 87, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel6.setText("mg/dl");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(687, 488, -1, -1));

        txtCho2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        add(txtCho2, new org.netbeans.lib.awtextra.AbsoluteConstraints(801, 485, 87, -1));

        txtPulseR2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtPulseR2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPulseR2ActionPerformed(evt);
            }
        });
        add(txtPulseR2, new org.netbeans.lib.awtextra.AbsoluteConstraints(801, 526, 87, -1));

        txtDysBp2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtDysBp2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDysBp2ActionPerformed(evt);
            }
        });
        add(txtDysBp2, new org.netbeans.lib.awtextra.AbsoluteConstraints(801, 444, 87, -1));

        txtSysBp2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        add(txtSysBp2, new org.netbeans.lib.awtextra.AbsoluteConstraints(801, 403, 87, -1));

        txtWt2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtWt2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtWt2ActionPerformed(evt);
            }
        });
        add(txtWt2, new org.netbeans.lib.awtextra.AbsoluteConstraints(801, 362, 87, -1));

        txtWt1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        add(txtWt1, new org.netbeans.lib.awtextra.AbsoluteConstraints(595, 362, 87, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel1.setText("Lbs");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(687, 365, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel4.setText("mmHg");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(687, 406, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel5.setText("mmHg");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(687, 447, -1, -1));

        txtDysBp1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtDysBp1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDysBp1ActionPerformed(evt);
            }
        });
        add(txtDysBp1, new org.netbeans.lib.awtextra.AbsoluteConstraints(595, 444, 87, -1));

        txtSysBp1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        add(txtSysBp1, new org.netbeans.lib.awtextra.AbsoluteConstraints(595, 403, 87, -1));

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel13.setText("WEIGHT:");
        add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(377, 365, -1, -1));

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel17.setText("SYSTOLIC BP:");
        add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(377, 406, -1, -1));

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel18.setText("DYSTOLIC BP:");
        add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(377, 447, -1, -1));

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel19.setText("CHOLESTEROL:");
        add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(377, 488, -1, -1));

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel20.setText("PULSE RATE:");
        add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(377, 529, -1, -1));

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel21.setText("BLOOD SUGAR LEVEL:");
        add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(377, 570, -1, -1));

        workRequestJTable.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Message", "Patient", "Receptionist", "Receiver", "Status", "Recorded Date", "Parameter's Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(97, 193, 1002, 97));

        jLabel31.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel31.setText("REQUESTS TABLE");
        add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 140, -1, -1));

        btnAssignToMe.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        btnAssignToMe.setText("Assign to me");
        btnAssignToMe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignToMeActionPerformed(evt);
            }
        });
        add(btnAssignToMe, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 310, -1, -1));

        btnViewDetails.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        btnViewDetails.setText("View Details ");
        btnViewDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewDetailsActionPerformed(evt);
            }
        });
        add(btnViewDetails, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 310, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("INTERN:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 90, 70, -1));

        valueLabel1.setText("<value>");
        add(valueLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 90, 215, -1));

        valueLabel.setText("<value>");
        add(valueLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 30, 215, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("ENTERPRISE:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 30, -1, -1));

        jLabel30.setFont(new java.awt.Font("Tahoma", 2, 16)); // NOI18N
        jLabel30.setText("Click here  to view paitient's Parameters' Details");
        add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 320, 345, -1));

        jLabel32.setFont(new java.awt.Font("Tahoma", 2, 16)); // NOI18N
        jLabel32.setText("Click here to assign the request to yourself");
        add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 320, 309, -1));

        jLabel33.setIcon(new javax.swing.ImageIcon("C:\\Users\\ruchi\\Desktop\\Final Project\\Project\\src\\userInterface\\Alien Ink 2560X1600 Abstract Background.jpg")); // NOI18N
        add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(-160, 0, 1840, 1550));
    }// </editor-fold>//GEN-END:initComponents

    private void btnAssignToMeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignToMeActionPerformed

        int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a request from the table");
        } else {

            WorkRequest request = (WorkRequest) workRequestJTable.getValueAt(selectedRow, 0);
            if (request.getReceiver() != null) {
                JOptionPane.showMessageDialog(null, "This request has already been pending with you");
            } else {
                request.setReceiver(userAccount);
                request.setStatus("Pending with intern");
                populateTable();
            }

        }

    }//GEN-LAST:event_btnAssignToMeActionPerformed

    private void btnViewDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewDetailsActionPerformed
        int selectedRow = workRequestJTable.getSelectedRow();
        WorkRequest request = (WorkRequest) workRequestJTable.getValueAt(selectedRow, 0);
        UserAccount uAccont = request.getPatientSender();
        if (selectedRow >= 0) {
            int i = uAccont.getEmployee().getVitalSignHistory().getVitalSignList().size() - 1;
            VitalSigns vs = uAccont.getEmployee().getVitalSignHistory().getVitalSignList().get(i);
            txtWt1.setText(String.valueOf(vs.getWeight()));
            txtSysBp1.setText(String.valueOf(vs.getSysbp()));
            txtHr1.setText(String.valueOf(vs.getHeartRate()));
            txtDysBp1.setText(String.valueOf(vs.getDyspBp()));
            txtAge1.setText(String.valueOf(vs.getAge()));
            txtBmi1.setText(String.valueOf(vs.getBmi()));
            txtHeight1.setText(String.valueOf(vs.getHeight()));
            txtBloodPh1.setText(String.valueOf(vs.getBloodPh()));
            txtBloodHb1.setText(String.valueOf(vs.getBloodPh()));
            txtTemp1.setText(String.valueOf(vs.getBodyTemperature()));
            txtRespRate1.setText(String.valueOf(vs.getRespiratioRate()));
            txtBloodSugar1.setText(String.valueOf(vs.getBloodSugarLevel()));
            txtPulseR1.setText(String.valueOf(vs.getPulseRate()));
            txtCho1.setText(String.valueOf(vs.getCholesterol()));
            txtWt2.setVisible(true);
            txtSysBp2.setVisible(true);
            txtHr2.setVisible(true);
            txtDysBp2.setVisible(true);
            txtBmi2.setVisible(true);
            txtHeight2.setVisible(true);
            txtBloodPh2.setVisible(true);
            txtBloodHb2.setVisible(true);
            txtTemp2.setVisible(true);
            txtRespRate2.setVisible(true);
            txtBloodSugar2.setVisible(true);
            txtPulseR2.setVisible(true);
            txtCho2.setVisible(true);
            if (vs.getAge() >= 10 && vs.getAge() < 20) {

                if ((vs.getHeight() >= 148 && vs.getHeight() <= 152 && vs.getWeight() >= 109 && vs.getWeight() <= 148) || (vs.getHeight() >= 153 && vs.getHeight() <= 168 && vs.getWeight() >= 115 && vs.getWeight() <= 163) || (vs.getHeight() >= 168 && vs.getHeight() <= 183 && vs.getWeight() >= 115 && vs.getWeight() <= 163)) {
                    txtHeight2.setText("normal");
                    txtHeight2.setBackground(new Color(51, 255, 153));
                    txtWt2.setText("normal");
                    txtWt2.setBackground(new Color(51, 255, 153));
                    txtBmi2.setText("normal");
                    txtBmi2.setBackground(new Color(51, 255, 153));
                } else {
                    txtHeight2.setText("HighRisk");
                    txtWt2.setText("HighRisk");
                    txtBmi2.setText("HighRisk");
                    txtHeight2.setBackground(new Color(255, 180, 180));
                    txtWt2.setBackground(new Color(255, 180, 180));
                    txtBmi2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getSysbp() >= 120 && vs.getSysbp() < 122) {
                    txtSysBp2.setText("normal");
                    txtSysBp2.setBackground(new Color(51, 255, 153));
                } else if (vs.getSysbp() >= 122 && vs.getSysbp() <= 124) {
                    txtSysBp2.setText("moderate");
                    txtSysBp2.setBackground(new Color(244, 247, 170));
                } else {
                    txtSysBp2.setText("HighRisk");
                    txtSysBp2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getBloodSugarLevel() >= 70 && vs.getBloodSugarLevel() <= 150) {
                    txtBloodSugar2.setText("normal");
                    txtBloodSugar2.setBackground(new Color(51, 255, 153));
                } else if ((vs.getBloodSugarLevel() > 150 && vs.getBloodSugarLevel() <= 170) || (vs.getBloodSugarLevel() >= 65 && vs.getBloodSugarLevel() < 70)) {
                    txtBloodSugar2.setText("moderate");
                    txtBloodSugar2.setBackground(new Color(244, 247, 170));
                } else {
                    txtBloodSugar2.setText("HighRisk");
                    txtBloodSugar2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getBloodHb() >= 11.5 && vs.getBloodHb() <= 15.5) {
                    txtBloodHb2.setText("normal");
                    txtBloodHb2.setBackground(new Color(51, 255, 153));
                } else if (vs.getBloodHb() >= 10 && vs.getBloodHb() < 11.5) {
                    txtBloodHb2.setText("moderate");
                    txtBloodHb2.setBackground(new Color(244, 247, 170));
                } else {
                    txtBloodHb2.setText("HighRisk");
                    txtBloodHb2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getRespiratioRate() >= 12 && vs.getRespiratioRate() <= 23) {
                    txtRespRate2.setText("normal");
                    txtRespRate2.setBackground(new Color(51, 255, 153));
                } else if (vs.getRespiratioRate() > 23 && vs.getRespiratioRate() <= 25) {
                    txtRespRate2.setText("Moderate");
                    txtRespRate2.setBackground(new Color(244, 247, 170));
                } else {
                    txtRespRate2.setText("HighRisk");
                    txtRespRate2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getDyspBp() >= 78 && vs.getDyspBp() <= 85) {
                    txtDysBp2.setText("normal");
                    txtDysBp2.setBackground(new Color(51, 255, 153));
                } else if (vs.getDyspBp() >= 76 && vs.getDyspBp() < 78) {
                    txtDysBp2.setText("Moderate");
                    txtDysBp2.setBackground(new Color(244, 247, 170));
                } else {
                    txtDysBp2.setText("HighRisk");
                    txtDysBp2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getCholesterol() <= 170) {
                    txtCho2.setText("normal");
                    txtCho2.setBackground(new Color(51, 255, 153));
                } else if (vs.getCholesterol() > 170 && vs.getCholesterol() <= 199) {
                    txtCho2.setText("Moderate");
                    txtCho2.setBackground(new Color(244, 247, 170));
                } else {
                    txtCho2.setText("HighRisk");
                    txtCho2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getPulseRate() >= 100 && vs.getPulseRate() <= 170) {
                    txtPulseR2.setText("normal");
                    txtPulseR2.setBackground(new Color(51, 255, 153));
                } else if ((vs.getPulseRate() > 170 && vs.getPulseRate() <= 180) || (vs.getPulseRate() >= 90 && vs.getPulseRate() < 100)) {
                    txtPulseR2.setText("Moderate");
                    txtPulseR2.setBackground(new Color(244, 247, 170));
                } else {
                    txtPulseR2.setText("HighRisk");
                    txtPulseR2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getBodyTemperature() == 98.7) {
                    txtTemp2.setText("normal");
                    txtTemp2.setBackground(new Color(51, 255, 153));
                } else if ((vs.getBodyTemperature() > 98.7 && vs.getBodyTemperature() < 99.5) || (vs.getBodyTemperature() >= 97.5 && vs.getBodyTemperature() < 98.7)) {
                    txtTemp2.setText("Moderate");
                    txtTemp2.setBackground(new Color(244, 247, 170));
                } else {
                    txtTemp2.setText("HighRisk");
                    txtTemp2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getBloodPh() >= 7.35 && vs.getBloodPh() <= 7.45) {
                    txtBloodPh2.setText("normal");
                    txtBloodPh2.setBackground(new Color(51, 255, 153));
                } else if (vs.getBloodPh() >= 7 && vs.getBloodPh() < 7.35) {
                    txtBloodPh2.setText("Moderate");
                    txtBloodPh2.setBackground(new Color(244, 247, 170));
                } else {
                    txtBloodPh2.setText("HighRisk");
                    txtBloodPh2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getHeartRate() >= 80 && vs.getHeartRate() <= 140) {
                    txtHr2.setText("normal");
                    txtHr2.setBackground(new Color(51, 255, 153));
                } else if ((vs.getHeartRate() >= 75 && vs.getHeartRate() < 80) || (vs.getHeartRate() > 141 && vs.getHeartRate() < 150)) {
                    txtHr2.setText("Moderate");
                    txtHr2.setBackground(new Color(244, 247, 170));
                } else {
                    txtHr2.setText("HighRisk");
                    txtHr2.setBackground(new Color(255, 180, 180));
                }
            } else if (vs.getAge() >= 20 && vs.getAge() < 30) {

                if ((vs.getHeight() >= 148 && vs.getHeight() <= 152 && vs.getWeight() >= 109 && vs.getWeight() <= 148) || (vs.getHeight() >= 153 && vs.getHeight() <= 168 && vs.getWeight() >= 115 && vs.getWeight() <= 163) || (vs.getHeight() >= 168 && vs.getHeight() <= 183 && vs.getWeight() >= 115 && vs.getWeight() <= 163)) {
                    txtHeight2.setText("normal");
                    txtHeight2.setBackground(new Color(51, 255, 153));
                    txtWt2.setText("normal");
                    txtWt2.setBackground(new Color(51, 255, 153));
                    txtBmi2.setText("normal");
                    txtBmi2.setBackground(new Color(51, 255, 153));
                } else {
                    txtHeight2.setText("HighRisk");
                    txtWt2.setText("HighRisk");
                    txtBmi2.setText("HighRisk");
                    txtHeight2.setBackground(new Color(255, 180, 180));
                    txtWt2.setBackground(new Color(255, 180, 180));
                    txtBmi2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getSysbp() >= 120 && vs.getSysbp() < 122) {
                    txtSysBp2.setText("normal");
                    txtSysBp2.setBackground(new Color(51, 255, 153));
                } else if (vs.getSysbp() >= 122 && vs.getSysbp() <= 124) {
                    txtSysBp2.setText("moderate");
                    txtSysBp2.setBackground(new Color(244, 247, 170));
                } else {
                    txtSysBp2.setText("HighRisk");
                    txtSysBp2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getBloodSugarLevel() >= 70 && vs.getBloodSugarLevel() <= 150) {
                    txtBloodSugar2.setText("normal");
                    txtBloodSugar2.setBackground(new Color(51, 255, 153));
                } else if ((vs.getBloodSugarLevel() > 150 && vs.getBloodSugarLevel() <= 170) || (vs.getBloodSugarLevel() >= 65 && vs.getBloodSugarLevel() < 70)) {
                    txtBloodSugar2.setText("moderate");
                    txtBloodSugar2.setBackground(new Color(244, 247, 170));
                } else {
                    txtBloodSugar2.setText("HighRisk");
                    txtBloodSugar2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getBloodHb() >= 12 && vs.getBloodHb() <= 16) {
                    txtBloodHb2.setText("normal");
                    txtBloodHb2.setBackground(new Color(51, 255, 153));
                } else if (vs.getBloodHb() >= 10 && vs.getBloodHb() < 11.9) {
                    txtBloodHb2.setText("moderate");
                    txtBloodHb2.setBackground(new Color(244, 247, 170));
                } else {
                    txtBloodHb2.setText("HighRisk");
                    txtBloodHb2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getRespiratioRate() >= 12 && vs.getRespiratioRate() <= 28) {
                    txtRespRate2.setText("normal");
                    txtRespRate2.setBackground(new Color(51, 255, 153));
                } else if (vs.getRespiratioRate() > 28 && vs.getRespiratioRate() <= 30) {
                    txtRespRate2.setText("Moderate");
                    txtRespRate2.setBackground(new Color(244, 247, 170));
                } else {
                    txtRespRate2.setText("HighRisk");
                    txtRespRate2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getDyspBp() >= 80 && vs.getDyspBp() <= 86) {
                    txtDysBp2.setText("normal");
                    txtDysBp2.setBackground(new Color(51, 255, 153));
                } else if (vs.getDyspBp() >= 78 && vs.getDyspBp() < 80) {
                    txtDysBp2.setText("Moderate");
                    txtDysBp2.setBackground(new Color(244, 247, 170));
                } else {
                    txtDysBp2.setText("HighRisk");
                    txtDysBp2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getCholesterol() >= 180 && vs.getCholesterol() <= 199) {
                    txtCho2.setText("normal");
                    txtCho2.setBackground(new Color(51, 255, 153));
                } else if (vs.getCholesterol() >= 200 && vs.getCholesterol() <= 239) {
                    txtCho2.setText("Moderate");
                    txtCho2.setBackground(new Color(244, 247, 170));
                } else {
                    txtCho2.setText("HighRisk");
                    txtCho2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getPulseRate() >= 90 && vs.getPulseRate() <= 162) {
                    txtPulseR2.setText("normal");
                    txtPulseR2.setBackground(new Color(51, 255, 153));
                } else if ((vs.getPulseRate() >= 80 && vs.getPulseRate() < 90) || (vs.getPulseRate() > 162 && vs.getPulseRate() <= 170)) {
                    txtPulseR2.setText("Moderate");
                    txtPulseR2.setBackground(new Color(244, 247, 170));
                } else {
                    txtPulseR2.setText("HighRisk");
                    txtPulseR2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getBodyTemperature() == 98.7) {
                    txtTemp2.setText("normal");
                    txtTemp2.setBackground(new Color(51, 255, 153));
                } else if ((vs.getBodyTemperature() > 98.7 && vs.getBodyTemperature() < 99.5) || (vs.getBodyTemperature() >= 97.5 && vs.getBodyTemperature() < 98.7)) {
                    txtTemp2.setText("Moderate");
                    txtTemp2.setBackground(new Color(244, 247, 170));
                } else {
                    txtTemp2.setText("HighRisk");
                    txtTemp2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getBloodPh() >= 7.35 && vs.getBloodPh() <= 7.45) {
                    txtBloodPh2.setText("normal");
                    txtBloodPh2.setBackground(new Color(51, 255, 153));
                } else if (vs.getBloodPh() >= 7 && vs.getBloodPh() < 7.35) {
                    txtBloodPh2.setText("Moderate");
                    txtBloodPh2.setBackground(new Color(244, 247, 170));
                } else {
                    txtBloodPh2.setText("HighRisk");
                    txtBloodPh2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getHeartRate() >= 100 && vs.getHeartRate() <= 162) {
                    txtHr2.setText("normal");
                    txtHr2.setBackground(new Color(51, 255, 153));
                } else if ((vs.getHeartRate() >= 95 && vs.getHeartRate() < 100) || (vs.getHeartRate() > 162 && vs.getHeartRate() < 170)) {
                    txtHr2.setText("Moderate");
                    txtHr2.setBackground(new Color(244, 247, 170));
                } else {
                    txtHr2.setText("HighRisk");
                    txtHr2.setBackground(new Color(255, 180, 180));
                }
            } else if (vs.getAge() >= 30 && vs.getAge() < 40) {

                if ((vs.getHeight() >= 148 && vs.getHeight() <= 152 && vs.getWeight() >= 109 && vs.getWeight() <= 148) || (vs.getHeight() >= 153 && vs.getHeight() <= 168 && vs.getWeight() >= 115 && vs.getWeight() <= 163) || (vs.getHeight() >= 168 && vs.getHeight() <= 183 && vs.getWeight() >= 115 && vs.getWeight() <= 163)) {
                    txtHeight2.setText("normal");
                    txtHeight2.setBackground(new Color(51, 255, 153));
                    txtWt2.setText("normal");
                    txtWt2.setBackground(new Color(51, 255, 153));
                    txtBmi2.setText("normal");
                    txtBmi2.setBackground(new Color(51, 255, 153));
                } else {
                    txtHeight2.setText("HighRisk");
                    txtWt2.setText("HighRisk");
                    txtBmi2.setText("HighRisk");
                    txtHeight2.setBackground(new Color(255, 180, 180));
                    txtWt2.setBackground(new Color(255, 180, 180));
                    txtBmi2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getSysbp() >= 122 && vs.getSysbp() < 125) {
                    txtSysBp2.setText("normal");
                    txtSysBp2.setBackground(new Color(51, 255, 153));
                } else if (vs.getSysbp() > 125 && vs.getSysbp() <= 127) {
                    txtSysBp2.setText("moderate");
                    txtSysBp2.setBackground(new Color(244, 247, 170));
                } else {
                    txtSysBp2.setText("HighRisk");
                    txtSysBp2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getBloodSugarLevel() >= 70 && vs.getBloodSugarLevel() <= 150) {
                    txtBloodSugar2.setText("normal");
                    txtBloodSugar2.setBackground(new Color(51, 255, 153));
                } else if ((vs.getBloodSugarLevel() > 150 && vs.getBloodSugarLevel() <= 170) || (vs.getBloodSugarLevel() >= 65 && vs.getBloodSugarLevel() < 70)) {
                    txtBloodSugar2.setText("moderate");
                    txtBloodSugar2.setBackground(new Color(244, 247, 170));
                } else {
                    txtBloodSugar2.setText("HighRisk");
                    txtBloodSugar2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getBloodHb() >= 12 && vs.getBloodHb() <= 16) {
                    txtBloodHb2.setText("normal");
                    txtBloodHb2.setBackground(new Color(51, 255, 153));
                } else if (vs.getBloodHb() >= 10 && vs.getBloodHb() < 11.9) {
                    txtBloodHb2.setText("moderate");
                    txtBloodHb2.setBackground(new Color(244, 247, 170));
                } else {
                    txtBloodHb2.setText("HighRisk");
                    txtBloodHb2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getRespiratioRate() >= 12 && vs.getRespiratioRate() <= 28) {
                    txtRespRate2.setText("normal");
                    txtRespRate2.setBackground(new Color(51, 255, 153));
                } else if (vs.getRespiratioRate() > 28 && vs.getRespiratioRate() <= 30) {
                    txtRespRate2.setText("Moderate");
                    txtRespRate2.setBackground(new Color(244, 247, 170));
                } else {
                    txtRespRate2.setText("HighRisk");
                    txtRespRate2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getDyspBp() >= 80 && vs.getDyspBp() <= 82) {
                    txtDysBp2.setText("normal");
                    txtDysBp2.setBackground(new Color(51, 255, 153));
                } else if (vs.getDyspBp() >= 78 && vs.getDyspBp() < 80) {
                    txtDysBp2.setText("Moderate");
                    txtDysBp2.setBackground(new Color(244, 247, 170));
                } else {
                    txtDysBp2.setText("HighRisk");
                    txtDysBp2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getCholesterol() >= 180 && vs.getCholesterol() <= 199) {
                    txtCho2.setText("normal");
                    txtCho2.setBackground(new Color(51, 255, 153));
                } else if (vs.getCholesterol() >= 200 && vs.getCholesterol() <= 239) {
                    txtCho2.setText("Moderate");
                    txtCho2.setBackground(new Color(244, 247, 170));
                } else {
                    txtCho2.setText("HighRisk");
                    txtCho2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getPulseRate() >= 85 && vs.getPulseRate() <= 149) {
                    txtPulseR2.setText("normal");
                    txtPulseR2.setBackground(new Color(51, 255, 153));
                } else if ((vs.getPulseRate() >= 80 && vs.getPulseRate() < 85) || (vs.getPulseRate() > 149 && vs.getPulseRate() <= 155)) {
                    txtPulseR2.setText("Moderate");
                    txtPulseR2.setBackground(new Color(244, 247, 170));
                } else {
                    txtPulseR2.setText("HighRisk");
                    txtPulseR2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getBodyTemperature() == 98.7) {
                    txtTemp2.setText("normal");
                    txtTemp2.setBackground(new Color(51, 255, 153));
                } else if ((vs.getBodyTemperature() > 98.7 && vs.getBodyTemperature() < 99.5) || (vs.getBodyTemperature() >= 97.5 && vs.getBodyTemperature() < 98.7)) {
                    txtTemp2.setText("Moderate");
                    txtTemp2.setBackground(new Color(244, 247, 170));
                } else {
                    txtTemp2.setText("HighRisk");
                    txtTemp2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getBloodPh() >= 7.35 && vs.getBloodPh() <= 7.45) {
                    txtBloodPh2.setText("normal");
                    txtBloodPh2.setBackground(new Color(51, 255, 153));
                } else if (vs.getBloodPh() >= 7 && vs.getBloodPh() < 7.35) {
                    txtBloodPh2.setText("Moderate");
                    txtBloodPh2.setBackground(new Color(244, 247, 170));
                } else {
                    txtBloodPh2.setText("HighRisk");
                    txtBloodPh2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getHeartRate() >= 95 && vs.getHeartRate() <= 153) {
                    txtHr2.setText("normal");
                    txtHr2.setBackground(new Color(51, 255, 153));
                } else if ((vs.getHeartRate() >= 90 && vs.getHeartRate() < 95) || (vs.getHeartRate() > 153 && vs.getHeartRate() < 160)) {
                    txtHr2.setText("Moderate");
                    txtHr2.setBackground(new Color(244, 247, 170));
                } else {
                    txtHr2.setText("HighRisk");
                    txtHr2.setBackground(new Color(255, 180, 180));
                }
            } else if (vs.getAge() >= 20 && vs.getAge() < 30) {

                if ((vs.getHeight() >= 148 && vs.getHeight() <= 152 && vs.getWeight() >= 109 && vs.getWeight() <= 148) || (vs.getHeight() >= 153 && vs.getHeight() <= 168 && vs.getWeight() >= 115 && vs.getWeight() <= 163) || (vs.getHeight() >= 168 && vs.getHeight() <= 183 && vs.getWeight() >= 115 && vs.getWeight() <= 163)) {
                    txtHeight2.setText("normal");
                    txtHeight2.setBackground(new Color(51, 255, 153));
                    txtWt2.setText("normal");
                    txtWt2.setBackground(new Color(51, 255, 153));
                    txtBmi2.setText("normal");
                    txtBmi2.setBackground(new Color(51, 255, 153));
                } else {
                    txtHeight2.setText("HighRisk");
                    txtWt2.setText("HighRisk");
                    txtBmi2.setText("HighRisk");
                    txtHeight2.setBackground(new Color(255, 180, 180));
                    txtWt2.setBackground(new Color(255, 180, 180));
                    txtBmi2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getSysbp() >= 120 && vs.getSysbp() < 122) {
                    txtSysBp2.setText("normal");
                    txtSysBp2.setBackground(new Color(51, 255, 153));
                } else if (vs.getSysbp() >= 122 && vs.getSysbp() <= 124) {
                    txtSysBp2.setText("moderate");
                    txtSysBp2.setBackground(new Color(244, 247, 170));
                } else {
                    txtSysBp2.setText("HighRisk");
                    txtSysBp2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getBloodSugarLevel() >= 70 && vs.getBloodSugarLevel() <= 150) {
                    txtBloodSugar2.setText("normal");
                    txtBloodSugar2.setBackground(new Color(51, 255, 153));
                } else if ((vs.getBloodSugarLevel() > 150 && vs.getBloodSugarLevel() <= 170) || (vs.getBloodSugarLevel() >= 65 && vs.getBloodSugarLevel() < 70)) {
                    txtBloodSugar2.setText("moderate");
                    txtBloodSugar2.setBackground(new Color(244, 247, 170));
                } else {
                    txtBloodSugar2.setText("HighRisk");
                    txtBloodSugar2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getBloodHb() >= 12 && vs.getBloodHb() <= 16) {
                    txtBloodHb2.setText("normal");
                    txtBloodHb2.setBackground(new Color(51, 255, 153));
                } else if (vs.getBloodHb() >= 10 && vs.getBloodHb() < 11.9) {
                    txtBloodHb2.setText("moderate");
                    txtBloodHb2.setBackground(new Color(244, 247, 170));
                } else {
                    txtBloodHb2.setText("HighRisk");
                    txtBloodHb2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getRespiratioRate() >= 12 && vs.getRespiratioRate() <= 28) {
                    txtRespRate2.setText("normal");
                    txtRespRate2.setBackground(new Color(51, 255, 153));
                } else if (vs.getRespiratioRate() > 28 && vs.getRespiratioRate() <= 30) {
                    txtRespRate2.setText("Moderate");
                    txtRespRate2.setBackground(new Color(244, 247, 170));
                } else {
                    txtRespRate2.setText("HighRisk");
                    txtRespRate2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getDyspBp() >= 80 && vs.getDyspBp() <= 86) {
                    txtDysBp2.setText("normal");
                    txtDysBp2.setBackground(new Color(51, 255, 153));
                } else if (vs.getDyspBp() >= 78 && vs.getDyspBp() < 80) {
                    txtDysBp2.setText("Moderate");
                    txtDysBp2.setBackground(new Color(244, 247, 170));
                } else {
                    txtDysBp2.setText("HighRisk");
                    txtDysBp2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getCholesterol() >= 180 && vs.getCholesterol() <= 199) {
                    txtCho2.setText("normal");
                    txtCho2.setBackground(new Color(51, 255, 153));
                } else if (vs.getCholesterol() >= 200 && vs.getCholesterol() <= 239) {
                    txtCho2.setText("Moderate");
                    txtCho2.setBackground(new Color(244, 247, 170));
                } else {
                    txtCho2.setText("HighRisk");
                    txtCho2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getPulseRate() >= 90 && vs.getPulseRate() <= 162) {
                    txtPulseR2.setText("normal");
                    txtPulseR2.setBackground(new Color(51, 255, 153));
                } else if ((vs.getPulseRate() >= 80 && vs.getPulseRate() < 90) || (vs.getPulseRate() > 162 && vs.getPulseRate() <= 170)) {
                    txtPulseR2.setText("Moderate");
                    txtPulseR2.setBackground(new Color(244, 247, 170));
                } else {
                    txtPulseR2.setText("HighRisk");
                    txtPulseR2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getBodyTemperature() == 98.7) {
                    txtTemp2.setText("normal");
                    txtTemp2.setBackground(new Color(51, 255, 153));
                } else if ((vs.getBodyTemperature() > 98.7 && vs.getBodyTemperature() < 99.5) || (vs.getBodyTemperature() >= 97.5 && vs.getBodyTemperature() < 98.7)) {
                    txtTemp2.setText("Moderate");
                    txtTemp2.setBackground(new Color(244, 247, 170));
                } else {
                    txtTemp2.setText("HighRisk");
                    txtTemp2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getBloodPh() >= 7.35 && vs.getBloodPh() <= 7.45) {
                    txtBloodPh2.setText("normal");
                    txtBloodPh2.setBackground(new Color(51, 255, 153));
                } else if (vs.getBloodPh() >= 7 && vs.getBloodPh() < 7.35) {
                    txtBloodPh2.setText("Moderate");
                    txtBloodPh2.setBackground(new Color(244, 247, 170));
                } else {
                    txtBloodPh2.setText("HighRisk");
                    txtBloodPh2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getHeartRate() >= 100 && vs.getHeartRate() <= 162) {
                    txtHr2.setText("normal");
                    txtHr2.setBackground(new Color(51, 255, 153));
                } else if ((vs.getHeartRate() >= 95 && vs.getHeartRate() < 100) || (vs.getHeartRate() > 162 && vs.getHeartRate() < 170)) {
                    txtHr2.setText("Moderate");
                    txtHr2.setBackground(new Color(244, 247, 170));
                } else {
                    txtHr2.setText("HighRisk");
                    txtHr2.setBackground(new Color(255, 180, 180));
                }
            } else if (vs.getAge() >= 40 && vs.getAge() < 50) {

                if ((vs.getHeight() >= 148 && vs.getHeight() <= 152 && vs.getWeight() >= 109 && vs.getWeight() <= 148) || (vs.getHeight() >= 153 && vs.getHeight() <= 168 && vs.getWeight() >= 115 && vs.getWeight() <= 163) || (vs.getHeight() >= 168 && vs.getHeight() <= 183 && vs.getWeight() >= 115 && vs.getWeight() <= 163)) {
                    txtHeight2.setText("normal");
                    txtHeight2.setBackground(new Color(51, 255, 153));
                    txtWt2.setText("normal");
                    txtWt2.setBackground(new Color(51, 255, 153));
                    txtBmi2.setText("normal");
                    txtBmi2.setBackground(new Color(51, 255, 153));
                } else {
                    txtHeight2.setText("HighRisk");
                    txtWt2.setText("HighRisk");
                    txtBmi2.setText("HighRisk");
                    txtHeight2.setBackground(new Color(255, 180, 180));
                    txtWt2.setBackground(new Color(255, 180, 180));
                    txtBmi2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getSysbp() >= 125 && vs.getSysbp() < 127) {
                    txtSysBp2.setText("normal");
                    txtSysBp2.setBackground(new Color(51, 255, 153));
                } else if (vs.getSysbp() > 127 && vs.getSysbp() <= 130) {
                    txtSysBp2.setText("moderate");
                    txtSysBp2.setBackground(new Color(244, 247, 170));
                } else {
                    txtSysBp2.setText("HighRisk");
                    txtSysBp2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getBloodSugarLevel() >= 70 && vs.getBloodSugarLevel() <= 150) {
                    txtBloodSugar2.setText("normal");
                    txtBloodSugar2.setBackground(new Color(51, 255, 153));
                } else if ((vs.getBloodSugarLevel() > 150 && vs.getBloodSugarLevel() <= 170) || (vs.getBloodSugarLevel() >= 65 && vs.getBloodSugarLevel() < 70)) {
                    txtBloodSugar2.setText("moderate");
                    txtBloodSugar2.setBackground(new Color(244, 247, 170));
                } else {
                    txtBloodSugar2.setText("HighRisk");
                    txtBloodSugar2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getBloodHb() >= 12 && vs.getBloodHb() <= 16) {
                    txtBloodHb2.setText("normal");
                    txtBloodHb2.setBackground(new Color(51, 255, 153));
                } else if (vs.getBloodHb() >= 10 && vs.getBloodHb() < 11.9) {
                    txtBloodHb2.setText("moderate");
                    txtBloodHb2.setBackground(new Color(244, 247, 170));
                } else {
                    txtBloodHb2.setText("HighRisk");
                    txtBloodHb2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getRespiratioRate() >= 12 && vs.getRespiratioRate() <= 28) {
                    txtRespRate2.setText("normal");
                    txtRespRate2.setBackground(new Color(51, 255, 153));
                } else if (vs.getRespiratioRate() > 28 && vs.getRespiratioRate() <= 30) {
                    txtRespRate2.setText("Moderate");
                    txtRespRate2.setBackground(new Color(244, 247, 170));
                } else {
                    txtRespRate2.setText("HighRisk");
                    txtRespRate2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getDyspBp() >= 83 && vs.getDyspBp() <= 85) {
                    txtDysBp2.setText("normal");
                    txtDysBp2.setBackground(new Color(51, 255, 153));
                } else if (vs.getDyspBp() >= 80 && vs.getDyspBp() < 83) {
                    txtDysBp2.setText("Moderate");
                    txtDysBp2.setBackground(new Color(244, 247, 170));
                } else {
                    txtDysBp2.setText("HighRisk");
                    txtDysBp2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getCholesterol() >= 180 && vs.getCholesterol() <= 199) {
                    txtCho2.setText("normal");
                    txtCho2.setBackground(new Color(51, 255, 153));
                } else if (vs.getCholesterol() >= 200 && vs.getCholesterol() <= 239) {
                    txtCho2.setText("Moderate");
                    txtCho2.setBackground(new Color(244, 247, 170));
                } else {
                    txtCho2.setText("HighRisk");
                    txtCho2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getPulseRate() >= 85 && vs.getPulseRate() <= 153) {
                    txtPulseR2.setText("normal");
                    txtPulseR2.setBackground(new Color(51, 255, 153));
                } else if ((vs.getPulseRate() >= 80 && vs.getPulseRate() < 85) || (vs.getPulseRate() > 149 && vs.getPulseRate() <= 153)) {
                    txtPulseR2.setText("Moderate");
                    txtPulseR2.setBackground(new Color(244, 247, 170));
                } else {
                    txtPulseR2.setText("HighRisk");
                    txtPulseR2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getBodyTemperature() == 98.7) {
                    txtTemp2.setText("normal");
                    txtTemp2.setBackground(new Color(51, 255, 153));
                } else if ((vs.getBodyTemperature() > 98.7 && vs.getBodyTemperature() < 99.5) || (vs.getBodyTemperature() >= 97.5 && vs.getBodyTemperature() < 98.7)) {
                    txtTemp2.setText("Moderate");
                    txtTemp2.setBackground(new Color(244, 247, 170));
                } else {
                    txtTemp2.setText("HighRisk");
                    txtTemp2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getBloodPh() >= 7.35 && vs.getBloodPh() <= 7.45) {
                    txtBloodPh2.setText("normal");
                    txtBloodPh2.setBackground(new Color(51, 255, 153));
                } else if (vs.getBloodPh() >= 7 && vs.getBloodPh() < 7.35) {
                    txtBloodPh2.setText("Moderate");
                    txtBloodPh2.setBackground(new Color(244, 247, 170));
                } else {
                    txtBloodPh2.setText("HighRisk");
                    txtBloodPh2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getHeartRate() >= 90 && vs.getHeartRate() <= 145) {
                    txtHr2.setText("normal");
                    txtHr2.setBackground(new Color(51, 255, 153));
                } else if ((vs.getHeartRate() >= 85 && vs.getHeartRate() < 90) || (vs.getHeartRate() > 145 && vs.getHeartRate() <= 150)) {
                    txtHr2.setText("Moderate");
                    txtHr2.setBackground(new Color(244, 247, 170));
                } else {
                    txtHr2.setText("HighRisk");
                    txtHr2.setBackground(new Color(255, 180, 180));
                }
            } else if (vs.getAge() >= 50 && vs.getAge() < 60) {

                if ((vs.getHeight() >= 148 && vs.getHeight() <= 152 && vs.getWeight() >= 109 && vs.getWeight() <= 148) || (vs.getHeight() >= 153 && vs.getHeight() <= 168 && vs.getWeight() >= 115 && vs.getWeight() <= 163) || (vs.getHeight() >= 168 && vs.getHeight() <= 183 && vs.getWeight() >= 115 && vs.getWeight() <= 163)) {
                    txtHeight2.setText("normal");
                    txtHeight2.setBackground(new Color(51, 255, 153));
                    txtWt2.setText("normal");
                    txtWt2.setBackground(new Color(51, 255, 153));
                    txtBmi2.setText("normal");
                    txtBmi2.setBackground(new Color(51, 255, 153));
                } else {
                    txtHeight2.setText("HighRisk");
                    txtWt2.setText("HighRisk");
                    txtBmi2.setText("HighRisk");
                    txtHeight2.setBackground(new Color(255, 180, 180));
                    txtWt2.setBackground(new Color(255, 180, 180));
                    txtBmi2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getSysbp() >= 127 && vs.getSysbp() < 129) {
                    txtSysBp2.setText("normal");
                    txtSysBp2.setBackground(new Color(51, 255, 153));
                } else if (vs.getSysbp() > 129 && vs.getSysbp() <= 130) {
                    txtSysBp2.setText("moderate");
                    txtSysBp2.setBackground(new Color(244, 247, 170));
                } else {
                    txtSysBp2.setText("HighRisk");
                    txtSysBp2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getBloodSugarLevel() >= 70 && vs.getBloodSugarLevel() <= 150) {
                    txtBloodSugar2.setText("normal");
                    txtBloodSugar2.setBackground(new Color(51, 255, 153));
                } else if ((vs.getBloodSugarLevel() > 150 && vs.getBloodSugarLevel() <= 170) || (vs.getBloodSugarLevel() >= 65 && vs.getBloodSugarLevel() < 70)) {
                    txtBloodSugar2.setText("moderate");
                    txtBloodSugar2.setBackground(new Color(244, 247, 170));
                } else {
                    txtBloodSugar2.setText("HighRisk");
                    txtBloodSugar2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getBloodHb() >= 12 && vs.getBloodHb() <= 16) {
                    txtBloodHb2.setText("normal");
                    txtBloodHb2.setBackground(new Color(51, 255, 153));
                } else if (vs.getBloodHb() >= 10 && vs.getBloodHb() < 11.9) {
                    txtBloodHb2.setText("moderate");
                    txtBloodHb2.setBackground(new Color(244, 247, 170));
                } else {
                    txtBloodHb2.setText("HighRisk");
                    txtBloodHb2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getRespiratioRate() >= 12 && vs.getRespiratioRate() <= 28) {
                    txtRespRate2.setText("normal");
                    txtRespRate2.setBackground(new Color(51, 255, 153));
                } else if (vs.getRespiratioRate() > 28 && vs.getRespiratioRate() <= 30) {
                    txtRespRate2.setText("Moderate");
                    txtRespRate2.setBackground(new Color(244, 247, 170));
                } else {
                    txtRespRate2.setText("HighRisk");
                    txtRespRate2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getDyspBp() >= 85 && vs.getDyspBp() <= 86) {
                    txtDysBp2.setText("normal");
                    txtDysBp2.setBackground(new Color(51, 255, 153));
                } else if (vs.getDyspBp() >= 80 && vs.getDyspBp() < 85) {
                    txtDysBp2.setText("Moderate");
                    txtDysBp2.setBackground(new Color(244, 247, 170));
                } else {
                    txtDysBp2.setText("HighRisk");
                    txtDysBp2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getCholesterol() >= 180 && vs.getCholesterol() <= 199) {
                    txtCho2.setText("normal");
                    txtCho2.setBackground(new Color(51, 255, 153));
                } else if (vs.getCholesterol() >= 200 && vs.getCholesterol() <= 239) {
                    txtCho2.setText("Moderate");
                    txtCho2.setBackground(new Color(244, 247, 170));
                } else {
                    txtCho2.setText("HighRisk");
                    txtCho2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getPulseRate() >= 83 && vs.getPulseRate() <= 140) {
                    txtPulseR2.setText("normal");
                    txtPulseR2.setBackground(new Color(51, 255, 153));
                } else if ((vs.getPulseRate() >= 80 && vs.getPulseRate() < 82) || (vs.getPulseRate() > 130 && vs.getPulseRate() <= 140)) {
                    txtPulseR2.setText("Moderate");
                    txtPulseR2.setBackground(new Color(244, 247, 170));
                } else {
                    txtPulseR2.setText("HighRisk");
                    txtPulseR2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getBodyTemperature() == 98.7) {
                    txtTemp2.setText("normal");
                    txtTemp2.setBackground(new Color(51, 255, 153));
                } else if ((vs.getBodyTemperature() > 98.7 && vs.getBodyTemperature() < 99.5) || (vs.getBodyTemperature() >= 97.5 && vs.getBodyTemperature() < 98.7)) {
                    txtTemp2.setText("Moderate");
                    txtTemp2.setBackground(new Color(244, 247, 170));
                } else {
                    txtTemp2.setText("HighRisk");
                    txtTemp2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getBloodPh() >= 7.35 && vs.getBloodPh() <= 7.45) {
                    txtBloodPh2.setText("normal");
                    txtBloodPh2.setBackground(new Color(51, 255, 153));
                } else if (vs.getBloodPh() >= 7 && vs.getBloodPh() < 7.35) {
                    txtBloodPh2.setText("Moderate");
                    txtBloodPh2.setBackground(new Color(244, 247, 170));
                } else {
                    txtBloodPh2.setText("HighRisk");
                    txtBloodPh2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getHeartRate() >= 85 && vs.getHeartRate() <= 136) {
                    txtHr2.setText("normal");
                    txtHr2.setBackground(new Color(51, 255, 153));
                } else if ((vs.getHeartRate() >= 80 && vs.getHeartRate() < 85) || (vs.getHeartRate() > 130 && vs.getHeartRate() <= 136)) {
                    txtHr2.setText("Moderate");
                    txtHr2.setBackground(new Color(244, 247, 170));
                } else {
                    txtHr2.setText("HighRisk");
                    txtHr2.setBackground(new Color(255, 180, 180));
                }
            } else {

                if ((vs.getHeight() >= 148 && vs.getHeight() <= 152 && vs.getWeight() >= 109 && vs.getWeight() <= 148) || (vs.getHeight() >= 153 && vs.getHeight() <= 168 && vs.getWeight() >= 115 && vs.getWeight() <= 163) || (vs.getHeight() >= 168 && vs.getHeight() <= 183 && vs.getWeight() >= 115 && vs.getWeight() <= 163)) {
                    txtHeight2.setText("normal");
                    txtHeight2.setBackground(new Color(51, 255, 153));
                    txtWt2.setText("normal");
                    txtWt2.setBackground(new Color(51, 255, 153));
                    txtBmi2.setText("normal");
                    txtBmi2.setBackground(new Color(51, 255, 153));
                } else {
                    txtHeight2.setText("HighRisk");
                    txtWt2.setText("HighRisk");
                    txtBmi2.setText("HighRisk");
                    txtHeight2.setBackground(new Color(255, 180, 180));
                    txtWt2.setBackground(new Color(255, 180, 180));
                    txtBmi2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getSysbp() >= 131 && vs.getSysbp() < 134) {
                    txtSysBp2.setText("normal");
                    txtSysBp2.setBackground(new Color(51, 255, 153));
                } else if (vs.getSysbp() > 127 && vs.getSysbp() <= 131) {
                    txtSysBp2.setText("moderate");
                    txtSysBp2.setBackground(new Color(244, 247, 170));
                } else {
                    txtSysBp2.setText("HighRisk");
                    txtSysBp2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getBloodSugarLevel() >= 70 && vs.getBloodSugarLevel() <= 150) {
                    txtBloodSugar2.setText("normal");
                    txtBloodSugar2.setBackground(new Color(51, 255, 153));
                } else if ((vs.getBloodSugarLevel() > 150 && vs.getBloodSugarLevel() <= 170) || (vs.getBloodSugarLevel() >= 65 && vs.getBloodSugarLevel() < 70)) {
                    txtBloodSugar2.setText("moderate");
                    txtBloodSugar2.setBackground(new Color(244, 247, 170));
                } else {
                    txtBloodSugar2.setText("HighRisk");
                    txtBloodSugar2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getBloodHb() >= 12 && vs.getBloodHb() <= 16) {
                    txtBloodHb2.setText("normal");
                    txtBloodHb2.setBackground(new Color(51, 255, 153));
                } else if (vs.getBloodHb() >= 10 && vs.getBloodHb() < 11.9) {
                    txtBloodHb2.setText("moderate");
                    txtBloodHb2.setBackground(new Color(244, 247, 170));
                } else {
                    txtBloodHb2.setText("HighRisk");
                    txtBloodHb2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getRespiratioRate() >= 10 && vs.getRespiratioRate() <= 32) {
                    txtRespRate2.setText("normal");
                    txtRespRate2.setBackground(new Color(51, 255, 153));
                } else if (vs.getRespiratioRate() > 32 && vs.getRespiratioRate() <= 35) {
                    txtRespRate2.setText("Moderate");
                    txtRespRate2.setBackground(new Color(244, 247, 170));
                } else {
                    txtRespRate2.setText("HighRisk");
                    txtRespRate2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getDyspBp() >= 85 && vs.getDyspBp() <= 86) {
                    txtDysBp2.setText("normal");
                    txtDysBp2.setBackground(new Color(51, 255, 153));
                } else if (vs.getDyspBp() >= 80 && vs.getDyspBp() < 85) {
                    txtDysBp2.setText("Moderate");
                    txtDysBp2.setBackground(new Color(244, 247, 170));
                } else {
                    txtDysBp2.setText("HighRisk");
                    txtDysBp2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getCholesterol() >= 180 && vs.getCholesterol() <= 199) {
                    txtCho2.setText("normal");
                    txtCho2.setBackground(new Color(51, 255, 153));
                } else if (vs.getCholesterol() >= 200 && vs.getCholesterol() <= 239) {
                    txtCho2.setText("Moderate");
                    txtCho2.setBackground(new Color(244, 247, 170));
                } else {
                    txtCho2.setText("HighRisk");
                    txtCho2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getPulseRate() >= 75 && vs.getPulseRate() <= 132) {
                    txtPulseR2.setText("normal");
                    txtPulseR2.setBackground(new Color(51, 255, 153));
                } else if ((vs.getPulseRate() >= 70 && vs.getPulseRate() < 75) || (vs.getPulseRate() > 132 && vs.getPulseRate() <= 135)) {
                    txtPulseR2.setText("Moderate");
                    txtPulseR2.setBackground(new Color(244, 247, 170));
                } else {
                    txtPulseR2.setText("HighRisk");
                    txtPulseR2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getBodyTemperature() == 98.7) {
                    txtTemp2.setText("normal");
                    txtTemp2.setBackground(new Color(51, 255, 153));
                } else if ((vs.getBodyTemperature() > 98.7 && vs.getBodyTemperature() < 99.5) || (vs.getBodyTemperature() >= 97.5 && vs.getBodyTemperature() < 98.7)) {
                    txtTemp2.setText("Moderate");
                    txtTemp2.setBackground(new Color(244, 247, 170));
                } else {
                    txtTemp2.setText("HighRisk");
                    txtTemp2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getBloodPh() >= 7.35 && vs.getBloodPh() <= 7.45) {
                    txtBloodPh2.setText("normal");
                    txtBloodPh2.setBackground(new Color(51, 255, 153));
                } else if (vs.getBloodPh() >= 7 && vs.getBloodPh() < 7.35) {
                    txtBloodPh2.setText("Moderate");
                    txtBloodPh2.setBackground(new Color(244, 247, 170));
                } else {
                    txtBloodPh2.setText("HighRisk");
                    txtBloodPh2.setBackground(new Color(255, 180, 180));
                }
                if (vs.getHeartRate() >= 80 && vs.getHeartRate() <= 128) {
                    txtHr2.setText("normal");
                    txtHr2.setBackground(new Color(51, 255, 153));
                } else if ((vs.getHeartRate() >= 75 && vs.getHeartRate() < 80) || (vs.getHeartRate() > 128 && vs.getHeartRate() <= 135)) {
                    txtHr2.setText("Moderate");
                    txtHr2.setBackground(new Color(244, 247, 170));
                } else {
                    txtHr2.setText("HighRisk");
                    txtHr2.setBackground(new Color(255, 180, 180));
                }
            }

        } else {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_btnViewDetailsActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a request from the table");
        } else {
            TestVitalsWorkRequest request = (TestVitalsWorkRequest) workRequestJTable.getValueAt(selectedRow, 0);
            if (request.getReceiver() != null && !request.getStatus().equals("Completed and prevention added")) {
                request.setStatus("Processing by intern");
                userInterface.InternRole.ProcessingInternJPanel pijp = new userInterface.InternRole.ProcessingInternJPanel(userProcessContainer, request);
                userProcessContainer.add("pijp", pijp);
                CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                layout.next(userProcessContainer);
            } else if (request.getStatus().equals("Completed and prevention added")) {
                JOptionPane.showMessageDialog(null, "This request has already been processed and sent to the patient");
            } else {
                JOptionPane.showMessageDialog(null, "Please assign the request first");
            }
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtWt2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtWt2ActionPerformed

    }//GEN-LAST:event_txtWt2ActionPerformed

    private void txtDysBp1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDysBp1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDysBp1ActionPerformed

    private void txtPulseR1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPulseR1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPulseR1ActionPerformed

    private void txtRespRate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRespRate1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRespRate1ActionPerformed

    private void txtDysBp2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDysBp2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDysBp2ActionPerformed

    private void txtPulseR2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPulseR2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPulseR2ActionPerformed

    private void txtRespRate2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRespRate2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRespRate2ActionPerformed

    private void txtAge1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAge1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAge1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssignToMe;
    private javax.swing.JButton btnViewDetails;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtAge1;
    private javax.swing.JTextField txtBloodHb1;
    private javax.swing.JTextField txtBloodHb2;
    private javax.swing.JTextField txtBloodPh1;
    private javax.swing.JTextField txtBloodPh2;
    private javax.swing.JTextField txtBloodSugar1;
    private javax.swing.JTextField txtBloodSugar2;
    private javax.swing.JTextField txtBmi1;
    private javax.swing.JTextField txtBmi2;
    private javax.swing.JTextField txtCho1;
    private javax.swing.JTextField txtCho2;
    private javax.swing.JTextField txtDysBp1;
    private javax.swing.JTextField txtDysBp2;
    private javax.swing.JTextField txtHeight1;
    private javax.swing.JTextField txtHeight2;
    private javax.swing.JTextField txtHr1;
    private javax.swing.JTextField txtHr2;
    private javax.swing.JTextField txtPulseR1;
    private javax.swing.JTextField txtPulseR2;
    private javax.swing.JTextField txtRespRate1;
    private javax.swing.JTextField txtRespRate2;
    private javax.swing.JTextField txtSysBp1;
    private javax.swing.JTextField txtSysBp2;
    private javax.swing.JTextField txtTemp1;
    private javax.swing.JTextField txtTemp2;
    private javax.swing.JTextField txtWt1;
    private javax.swing.JTextField txtWt2;
    private javax.swing.JLabel valueLabel;
    private javax.swing.JLabel valueLabel1;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
